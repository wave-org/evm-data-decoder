import { EVMInputDataDecoder } from "../src";

describe("EVMInputDataDecoder", function () {
  it("decode AAVE.supply", async function () {
    const decoder = new EVMInputDataDecoder();
    await decoder.loadAllABI();

    const result = await decoder.decodeInputData(
      "0x617ba0370000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c59900000000000000000000000000000000000000000000000000000000130001dd000000000000000000000000778f5d8df43f7415420d9f935b8630c86125bffa0000000000000000000000000000000000000000000000000000000000000000"
    );
    expect(result).not.toBe([]);
    expect(JSON.stringify(result)).toBe(
      `[{"miniFormat\":\"function supply(address,uint256,address,uint16)\",\"name\":"supply","inputData":[{"name":"asset","type":"address","value":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"},{"name":"amount","type":"uint256","value":"318767581"},{"name":"onBehalfOf","type":"address","value":"0x778F5d8dF43f7415420d9f935B8630C86125BfFA"},{"name":"referralCode","type":"uint16","value":"0"}]}]`
    );
  });

  it("decode 1Inch.swap", async function () {
    const decoder = new EVMInputDataDecoder();
    await decoder.loadAllABI();

    const result = await decoder.decodeInputData(
      "0x07ed2379000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c599000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000778f5d8df43f7415420d9f935b8630c86125bffa0000000000000000000000000000000000000000000000000000002e90edd00000000000000000000000000000000000000000000000000000000000130001dc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000c90000000000000000000000000000000000000000000000ab00007d00004f02a00000000000000000000000000000000000000000000000000000000012d1a6eaee63c1e5009db9e0e53058c89e5b94e29621a205198648425bdac17f958d2ee523a2206206994597c13d831ec780a06c4eca272260fac5e5542a773aa44fbcfedf7c193bc2c599111111125421ca6dc452d289314280a0f8842a650020d6bdbf782260fac5e5542a773aa44fbcfedf7c193bc2c599111111125421ca6dc452d289314280a0f8842a650000000000000000000000000000000000000000000000e26b9977"
    );
    expect(result).not.toBe([]);
    expect(JSON.stringify(result)).toBe(
      `[{"miniFormat\":\"function swap(address,(address,address,address,address,uint256,uint256,uint256),bytes) payable returns (uint256,uint256)\",\"name\":"swap","inputData":[{"name":"executor","type":"address","value":"0xE37e799D5077682FA0a244D46E5649F71457BD09"},{"name":"desc","type":"tuple","value":[{"name":"srcToken","type":"address","value":"0xdAC17F958D2ee523a2206206994597C13D831ec7"},{"name":"dstToken","type":"address","value":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"},{"name":"srcReceiver","type":"address","value":"0xE37e799D5077682FA0a244D46E5649F71457BD09"},{"name":"dstReceiver","type":"address","value":"0x778F5d8dF43f7415420d9f935B8630C86125BfFA"},{"name":"amount","type":"uint256","value":"200000000000"},{"name":"minReturnAmount","type":"uint256","value":"318767580"},{"name":"flags","type":"uint256","value":"0"}]},{"name":"data","type":"bytes","value":"0x0000000000000000000000000000000000000000000000ab00007d00004f02a00000000000000000000000000000000000000000000000000000000012d1a6eaee63c1e5009db9e0e53058c89e5b94e29621a205198648425bdac17f958d2ee523a2206206994597c13d831ec780a06c4eca272260fac5e5542a773aa44fbcfedf7c193bc2c599111111125421ca6dc452d289314280a0f8842a650020d6bdbf782260fac5e5542a773aa44fbcfedf7c193bc2c599111111125421ca6dc452d289314280a0f8842a65"}]}]`
    );
  });

  it("decode bytes[]", async function () {
    const decoder = new EVMInputDataDecoder();
    await decoder.loadAllABI();

    const result = await decoder.decodeInputData(
      "0x3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000006629cf6f00000000000000000000000000000000000000000000000000000000000000040b080604000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000006f05b59d3b200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000006f05b59d3b200000000000000000000000000000000000000000000000000000017ddf5768596e700000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000678431b4697eaf68fe8d5ab62cd4c9c1c2e97c200000000000000000000000000000000000000000000000000000000000000600000000000000000000000000678431b4697eaf68fe8d5ab62cd4c9c1c2e97c200000000000000000000000037a8f295612602f2774d331e562be9e61b83a327000000000000000000000000000000000000000000000000000000000000001900000000000000000000000000000000000000000000000000000000000000600000000000000000000000000678431b4697eaf68fe8d5ab62cd4c9c1c2e97c200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000017ceaf16dd9352"
    );
    expect(result).not.toBe([]);
    expect(JSON.stringify(result)).toBe(
      `[{"miniFormat\":\"function execute(bytes,bytes[],uint256) payable\",\"name\":"execute","inputData":[{"name":"commands","type":"bytes","value":"0x0b080604"},{"name":"inputs","type":"bytes[]","value":[{"name":"inputs[0]","type":"bytes","value":"0x000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000006f05b59d3b20000"},{"name":"inputs[1]","type":"bytes","value":"0x000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000006f05b59d3b200000000000000000000000000000000000000000000000000000017ddf5768596e700000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000678431b4697eaf68fe8d5ab62cd4c9c1c2e97c2"},{"name":"inputs[2]","type":"bytes","value":"0x0000000000000000000000000678431b4697eaf68fe8d5ab62cd4c9c1c2e97c200000000000000000000000037a8f295612602f2774d331e562be9e61b83a3270000000000000000000000000000000000000000000000000000000000000019"},{"name":"inputs[3]","type":"bytes","value":"0x0000000000000000000000000678431b4697eaf68fe8d5ab62cd4c9c1c2e97c200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000017ceaf16dd9352"}]},{"name":"deadline","type":"uint256","value":"1714016111"}]}]`
    );
  });

  it("decode address[]", async function () {
    const decoder = new EVMInputDataDecoder();
    await decoder.loadAllABI();

    const result = await decoder.decodeInputData(
      "0x5c11d79500000000000000000000000000000000000000000000000000031cbdf0c6826f0000000000000000000000000000000000000000000000000664f5dc5df9212500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000b1b2d032aa2f52347fbcfd08e5c3cc55216e8404000000000000000000000000000000000000000000000000000000006629ce0c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000a41d2f8ee4f47d3b860a149765a7df8c3287b7f0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
    );
    expect(result).not.toBe([]);
    expect(JSON.stringify(result)).toBe(
      `[{"miniFormat\":\"function swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)\",\"name\":"swapExactTokensForTokensSupportingFeeOnTransferTokens","inputData":[{"name":"amountIn","type":"uint256","value":"876027044069999"},{"name":"amountOutMin","type":"uint256","value":"460763388716851493"},{"name":"path","type":"address[]","value":[{"name":"path[0]","type":"address","value":"0xa41d2f8Ee4F47D3B860A149765A7dF8c3287b7F0"},{"name":"path[1]","type":"address","value":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"}]},{"name":"to","type":"address","value":"0xb1b2d032AA2F52347fbcfd08E5C3Cc55216E8404"},{"name":"deadline","type":"uint256","value":"1714015756"}]}]`
    );
  });
  it("import ABI and decode string", async function () {
    const decoder = new EVMInputDataDecoder();
    await decoder.loadAllABI();
    await decoder.importABI(
      `[{"constant":false,"inputs":[{"name":"addr","type":"address"},{"name":"timestamp","type":"uint256"},{"name":"chfCents","type":"uint256"},{"name":"currency","type":"string"},{"name":"memo","type":"bytes32"}],"name":"registerOffChainDonation","outputs":[],"payable":false,"type":"function"}]`
    );

    const result = await decoder.decodeInputData(
      "0x67043cae0000000000000000000000005a9dac9315fdd1c3d13ef8af7fdfeb522db08f020000000000000000000000000000000000000000000000000000000058a20230000000000000000000000000000000000000000000000000000000000040293400000000000000000000000000000000000000000000000000000000000000a0f3df64775a2dfb6bc9e09dced96d0816ff5055bf95da13ce5b6c3f53b97071c800000000000000000000000000000000000000000000000000000000000000034254430000000000000000000000000000000000000000000000000000000000"
    );
    expect(result).not.toBe([]);
    expect(JSON.stringify(result)).toBe(
      `[{"miniFormat\":\"function registerOffChainDonation(address,uint256,uint256,string,bytes32)\",\"name\":"registerOffChainDonation","inputData":[{"name":"addr","type":"address","value":"0x5A9dAC9315FdD1c3D13eF8Af7FDFEB522Db08F02"},{"name":"timestamp","type":"uint256","value":"1487012400"},{"name":"chfCents","type":"uint256","value":"4204852"},{"name":"currency","type":"string","value":"BTC"},{"name":"memo","type":"bytes32","value":"0xf3df64775a2dfb6bc9e09dced96d0816ff5055bf95da13ce5b6c3f53b97071c8"}]}]`
    );
  });
  it("import ABI and decode tuple[]", async function () {
    const decoder = new EVMInputDataDecoder();
    await decoder.loadAllABI();

    await decoder.importABI(
      `[{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"internalType":"struct Ballot.Proposal[2]","name":"pps","type":"tuple[2]"}],"name":"createTwoProposals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"stateMutability":"nonpayable","type":"constructor"}]`
    );

    const result = await decoder.decodeInputData(
      "0xc74ba8a50000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c
    );
    expect(result).not.toBe([]);
    expect(JSON.stringify(result)).toBe(
      `[{"miniFormat\":\"function createTwoProposals((string,uint256)[2])\",\"name\":"createTwoProposals","inputData":[{"name":"pps","type":"tuple[2]","value":[{"name":"pps[0]","type":"tuple","value":[{"name":"name","type":"string","value":"1"},{"name":"voteCount","type":"uint256","value":"1"}]},{"name":"pps[1]","type":"tuple","value":[{"name":"name","type":"string","value":"2"},{"name":"voteCount","type":"uint256","value":"2"}]}]}]}]`
    );
  });
});
